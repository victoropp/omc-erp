# Elasticsearch Cluster for Centralized Logging
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-config
  namespace: omc-erp-logging
  labels:
    app.kubernetes.io/name: elasticsearch
data:
  elasticsearch.yml: |
    cluster.name: omc-erp-logs
    node.name: ${HOSTNAME}
    node.roles: ["master", "data", "ingest"]
    
    # Network settings
    network.host: 0.0.0.0
    http.port: 9200
    transport.port: 9300
    
    # Discovery settings for clustering
    discovery.seed_hosts: ["elasticsearch-0.elasticsearch-headless.omc-erp-logging.svc.cluster.local", "elasticsearch-1.elasticsearch-headless.omc-erp-logging.svc.cluster.local", "elasticsearch-2.elasticsearch-headless.omc-erp-logging.svc.cluster.local"]
    cluster.initial_master_nodes: ["elasticsearch-0", "elasticsearch-1", "elasticsearch-2"]
    
    # Memory settings
    bootstrap.memory_lock: false
    
    # Security settings
    xpack.security.enabled: true
    xpack.security.transport.ssl.enabled: true
    xpack.security.transport.ssl.verification_mode: certificate
    xpack.security.transport.ssl.client_authentication: required
    xpack.security.transport.ssl.keystore.path: elastic-certificates.p12
    xpack.security.transport.ssl.truststore.path: elastic-certificates.p12
    xpack.security.http.ssl.enabled: true
    xpack.security.http.ssl.keystore.path: elastic-certificates.p12
    
    # Monitoring
    xpack.monitoring.enabled: true
    xpack.monitoring.collection.enabled: true
    
    # Index lifecycle management
    xpack.ilm.enabled: true
    
    # Performance settings
    indices.memory.index_buffer_size: 10%
    indices.memory.min_index_buffer_size: 48mb
    thread_pool.write.queue_size: 1000
    
    # Data retention
    action.destructive_requires_name: true
    cluster.routing.allocation.disk.threshold_enabled: true
    cluster.routing.allocation.disk.watermark.low: 85%
    cluster.routing.allocation.disk.watermark.high: 90%
    cluster.routing.allocation.disk.watermark.flood_stage: 95%

  jvm.options: |
    ## JVM configuration
    
    ################################################################
    ## IMPORTANT: JVM heap size
    ################################################################
    -Xms1g
    -Xmx1g
    
    ################################################################
    ## Expert settings
    ################################################################
    -XX:+UnlockExperimentalVMOptions
    -XX:+UseZGC
    -XX:+UnlockDiagnosticVMOptions
    -XX:+LogVMOutput
    
    ## GC configuration
    -XX:+UseConcMarkSweepGC
    -XX:CMSInitiatingOccupancyFraction=75
    -XX:+UseCMSInitiatingOccupancyOnly
    
    ## G1GC Configuration (alternative to CMS)
    # -XX:+UseG1GC
    # -XX:G1HeapRegionSize=32m
    # -XX:+UseG1MixedGCLiveThresholdPercent=35
    
    ## Locale
    -Dfile.encoding=UTF-8
    -Djava.locale.providers=COMPAT
    
    ## Security manager
    -Djava.security.manager
    -Djava.security.policy=all.policy
    
    ## Networking
    -Djava.net.preferIPv4Stack=true

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: omc-erp-logging
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
spec:
  serviceName: elasticsearch-headless
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/component: logging
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      initContainers:
      - name: configure-sysctl
        image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
        command: ['sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/data']
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
        ports:
        - name: http
          containerPort: 9200
          protocol: TCP
        - name: transport
          containerPort: 9300
          protocol: TCP
        env:
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: cluster.name
          value: "omc-erp-logs"
        - name: discovery.seed_hosts
          value: "elasticsearch-headless"
        - name: cluster.initial_master_nodes
          value: "elasticsearch-0,elasticsearch-1,elasticsearch-2"
        - name: ES_JAVA_OPTS
          value: "-Xms1g -Xmx1g"
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-secrets
              key: ELASTIC_PASSWORD
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
        - name: config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: config
          mountPath: /usr/share/elasticsearch/config/jvm.options.d/heap.options
          subPath: jvm.options
        livenessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
            scheme: HTTPS
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /_cluster/health?wait_for_status=yellow&timeout=5s
            port: 9200
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: config
        configMap:
          name: elasticsearch-config
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - elasticsearch
            topologyKey: kubernetes.io/hostname
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 100Gi
      storageClassName: fast-ssd

---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: omc-erp-logging
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 9200
    targetPort: 9200
    protocol: TCP
  - name: transport
    port: 9300
    targetPort: 9300
    protocol: TCP
  selector:
    app.kubernetes.io/name: elasticsearch

---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-headless
  namespace: omc-erp-logging
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
spec:
  clusterIP: None
  ports:
  - name: http
    port: 9200
    targetPort: 9200
  - name: transport
    port: 9300
    targetPort: 9300
  selector:
    app.kubernetes.io/name: elasticsearch

---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-secrets
  namespace: omc-erp-logging
  labels:
    app.kubernetes.io/name: elasticsearch
type: Opaque
data:
  # Base64 encoded passwords
  ELASTIC_PASSWORD: ZWxhc3RpY19wYXNzd29yZF9wcm9kdWN0aW9uXzIwMjU=  # elastic_password_production_2025
  KIBANA_PASSWORD: a2liYW5hX3Bhc3N3b3JkX3Byb2R1Y3Rpb25fMjAyNQ==  # kibana_password_production_2025
  LOGSTASH_PASSWORD: bG9nc3Rhc2hfcGFzc3dvcmRfcHJvZHVjdGlvbl8yMDI1  # logstash_password_production_2025

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: elasticsearch-pdb
  namespace: omc-erp-logging
  labels:
    app.kubernetes.io/name: elasticsearch
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch

---
# Index Template for OMC ERP Logs
apiVersion: batch/v1
kind: Job
metadata:
  name: elasticsearch-setup
  namespace: omc-erp-logging
  labels:
    app.kubernetes.io/name: elasticsearch-setup
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: setup
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Elasticsearch to be ready
          until curl -s -k -u elastic:${ELASTIC_PASSWORD} https://elasticsearch:9200/_cluster/health?wait_for_status=yellow&timeout=60s; do
            echo "Waiting for Elasticsearch..."
            sleep 10
          done
          
          # Create index template for OMC ERP logs
          curl -X PUT -k -u elastic:${ELASTIC_PASSWORD} \
            -H "Content-Type: application/json" \
            https://elasticsearch:9200/_index_template/omc-erp-logs \
            -d '{
              "index_patterns": ["omc-erp-*"],
              "template": {
                "settings": {
                  "number_of_shards": 2,
                  "number_of_replicas": 1,
                  "index.lifecycle.name": "omc-erp-policy",
                  "index.lifecycle.rollover_alias": "omc-erp-logs"
                },
                "mappings": {
                  "properties": {
                    "@timestamp": {
                      "type": "date"
                    },
                    "level": {
                      "type": "keyword"
                    },
                    "service": {
                      "type": "keyword"
                    },
                    "message": {
                      "type": "text",
                      "analyzer": "standard"
                    },
                    "pod": {
                      "type": "keyword"
                    },
                    "namespace": {
                      "type": "keyword"
                    },
                    "container": {
                      "type": "keyword"
                    },
                    "user_id": {
                      "type": "keyword"
                    },
                    "trace_id": {
                      "type": "keyword"
                    },
                    "span_id": {
                      "type": "keyword"
                    }
                  }
                }
              },
              "priority": 200,
              "version": 1
            }'
          
          # Create ILM policy for log rotation
          curl -X PUT -k -u elastic:${ELASTIC_PASSWORD} \
            -H "Content-Type: application/json" \
            https://elasticsearch:9200/_ilm/policy/omc-erp-policy \
            -d '{
              "policy": {
                "phases": {
                  "hot": {
                    "actions": {
                      "rollover": {
                        "max_size": "10GB",
                        "max_age": "7d"
                      },
                      "set_priority": {
                        "priority": 100
                      }
                    }
                  },
                  "warm": {
                    "min_age": "7d",
                    "actions": {
                      "set_priority": {
                        "priority": 50
                      },
                      "allocate": {
                        "number_of_replicas": 0
                      }
                    }
                  },
                  "delete": {
                    "min_age": "30d",
                    "actions": {
                      "delete": {}
                    }
                  }
                }
              }
            }'
        env:
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-secrets
              key: ELASTIC_PASSWORD