version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: omc-erp-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: omc_erp_dev
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - omc-erp-network

  # TimescaleDB for time-series data
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: omc-erp-timescaledb
    environment:
      POSTGRES_USER: timescale
      POSTGRES_PASSWORD: timescale
      POSTGRES_DB: omc_erp_timeseries
    ports:
      - '5434:5432'
    volumes:
      - timescale_data:/var/lib/postgresql/data
    networks:
      - omc-erp-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: omc-erp-redis
    command: redis-server --appendonly yes
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - omc-erp-network

  # MongoDB for document storage
  mongodb:
    image: mongo:6
    container_name: omc-erp-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: omc_erp_docs
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    networks:
      - omc-erp-network

  # Kafka for event streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: omc-erp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - omc-erp-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: omc-erp-kafka
    depends_on:
      - zookeeper
    ports:
      - '9094:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - omc-erp-network

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: omc-erp-minio
    command: server /data --console-address ":9001"
    ports:
      - '9002:9000'
      - '9003:9001'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    networks:
      - omc-erp-network

  # Adminer for database management
  adminer:
    image: adminer:latest
    container_name: omc-erp-adminer
    ports:
      - '8081:8080'
    networks:
      - omc-erp-network

  # Service Registry & Discovery
  service-registry:
    build:
      context: ./services/service-registry
      dockerfile: Dockerfile
    container_name: omc-erp-service-registry
    ports:
      - '3010:3010'
    environment:
      NODE_ENV: development
      PORT: 3010
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: omc_erp_dev
    depends_on:
      - postgres
      - redis
    networks:
      - omc-erp-network
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: omc-erp-api-gateway
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: omc_erp_dev
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MONGODB_URL: mongodb://admin:admin@mongodb:27017/omc_erp_docs?authSource=admin
      SERVICE_REGISTRY_URL: http://service-registry:3010
      AUTH_SERVICE_URL: http://auth-service:3001
      TRANSACTION_SERVICE_URL: http://transaction-service:3002
      STATION_SERVICE_URL: http://station-service:3003
      FLEET_SERVICE_URL: http://fleet-service:3004
      PRICING_SERVICE_URL: http://pricing-service:3006
      INVENTORY_SERVICE_URL: http://inventory-service:3007
      UPPF_SERVICE_URL: http://uppf-service:3008
      DEALER_SERVICE_URL: http://dealer-service:3009
      ACCOUNTING_SERVICE_URL: http://accounting-service:3011
      CONFIGURATION_SERVICE_URL: http://configuration-service:3012
    depends_on:
      - postgres
      - mongodb
      - redis
      - service-registry
    networks:
      - omc-erp-network
    restart: unless-stopped

  # Job Scheduler
  job-scheduler:
    build:
      context: ./services/job-scheduler
      dockerfile: Dockerfile
    container_name: omc-erp-job-scheduler
    ports:
      - '3013:3013'
    environment:
      NODE_ENV: development
      PORT: 3013
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SERVICE_REGISTRY_URL: http://service-registry:3010
      PRICING_SERVICE_URL: http://pricing-service:3006
      INVENTORY_SERVICE_URL: http://inventory-service:3007
      UPPF_SERVICE_URL: http://uppf-service:3008
      DEALER_SERVICE_URL: http://dealer-service:3009
      ACCOUNTING_SERVICE_URL: http://accounting-service:3011
    depends_on:
      - redis
      - service-registry
    networks:
      - omc-erp-network
    restart: unless-stopped

  # Logging Service
  logging-service:
    build:
      context: ./services/logging-service
      dockerfile: Dockerfile
    container_name: omc-erp-logging-service
    ports:
      - '3014:3014'
    environment:
      NODE_ENV: development
      PORT: 3014
      REDIS_HOST: redis
      REDIS_PORT: 6379
      LOG_LEVEL: info
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - omc-erp-network
    restart: unless-stopped

networks:
  omc-erp-network:
    driver: bridge

volumes:
  postgres_data:
  timescale_data:
  redis_data:
  mongo_data:
  minio_data: